{
  "_args": [
    [
      "oembed",
      "/Users/arininsland/Sites/  OPEN SOURCE/oembed-discoverator"
    ]
  ],
  "_defaultsLoaded": true,
  "_engineSupported": true,
  "_from": "oembed@*",
  "_id": "oembed@0.1.0",
  "_inCache": true,
  "_location": "/oembed",
  "_nodeVersion": "v0.6.6",
  "_npmUser": {
    "email": "astro@spaceboyz.net",
    "name": "astro"
  },
  "_npmVersion": "1.1.0-beta-4",
  "_phantomChildren": {},
  "_requested": {
    "name": "oembed",
    "raw": "oembed",
    "rawSpec": "",
    "scope": null,
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/oembed/-/oembed-0.1.0.tgz",
  "_shasum": "622665ffd4cc6f929665a02df5dfdb17ec2c763e",
  "_shrinkwrap": null,
  "_spec": "oembed",
  "_where": "/Users/arininsland/Sites/  OPEN SOURCE/oembed-discoverator",
  "author": {
    "email": "astro@spaceboyz.net",
    "name": "Astro",
    "url": "http://spaceboyz.net/~astro/"
  },
  "bin": {
    "oembed_diff_json_xml": "./bin/oembed_diff_json_xml.js",
    "oembed_get": "./bin/oembed_get.js",
    "oembed_httpd": "./bin/oembed_httpd.js"
  },
  "bugs": {
    "email": "astro@spaceboyz.net",
    "url": "https://github.com/astro/node-oembed/issues"
  },
  "dependencies": {
    "htmlparser": ">=1.7.3",
    "request": ">=2.2.9"
  },
  "description": "oEmbed consumer library and tools",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "622665ffd4cc6f929665a02df5dfdb17ec2c763e",
    "tarball": "http://registry.npmjs.org/oembed/-/oembed-0.1.0.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "http://github.com/astro/node-oembed",
  "installable": true,
  "keywords": [
    "oembed"
  ],
  "main": "lib/oembed.js",
  "maintainers": [
    {
      "name": "astro",
      "email": "astro@spaceboyz.net"
    }
  ],
  "name": "oembed",
  "optionalDependencies": {},
  "readme": "node-oembed\n===========\n\nFrom [oEmbed.com](http://oembed.com/):\n\n> oEmbed is a format for allowing an embedded representation of a URL\n> on third party sites. The simple API allows a website to display\n> embedded content (such as photos or videos) when a user posts a link\n> to that resource, without having to parse the resource directly.\n\nThis library allows you to discover and retrieve the oEmbed JSON\ndescriptors for these posts. It automatically converts the additional\nXML format to JavaScript objects for your convenience.  This package\ncomes with multiple tools that allow you to consume oEmbed\ninformation.\n\n\nInstallation\n------------\n\n    npm i oembed\n\nDon't forget to put it in `dependencies` of your `package.json` later\nif you use this in a node app.\n\n\nFeatures\n--------\n\n* Supports both\n\n  * application/json+oembed\n  * text/xml+oembed\n\n* Automatic [Embed.ly](http://embed.ly/) fallback when an API key is provided\n* Uses [htmlparser](https://github.com/tautologistics/node-htmlparser/) for HTML and XML parsing\n\n\nTools (bin/)\n------------\n\n### oembed_get &lt;URL&gt;\n\nRetrieve and display oEmbed information for a custom URL.\n\n### oembed_httpd &lt;bind-port&gt; [bind-host]\n\nReplicates the embed.ly API in a simple Web server.\n\n### oembed_diff_json_xml &lt;URL&gt;\n\nCompare JSON and XML descriptors for a URL.\n\n\nAPI (require('oembed'))\n-----------------------\n\nIn a real-world app all you should need is the *fetch* function to get\noEmbed information. We always use the `function callback(error,\nresult)` convention.\n\n```javascript\noembed.fetch(url, { maxwidth: 1920 }, function(error, result) {\n    if (error)\n        console.error(error);\n    else\n        console.log(\"oEmbed result\", result);\n});\n```\n\nThe two steps can be executed separately whenever you need more\ncontrol:\n\n* `oembed.discover(url, callback)` finds all `<link rel=\"alternate\">`\n  in a document\n* Get and parse descriptors immediately with `oembed.fetchJSON(url,\n  callback)` and `oembed.fetchXML(url, callback)` if you have\n  discovery information already\n\n\n### Embed.ly fallback\n\nThe Embed.ly service can deliver oEmbed information even for resources\nthat don't provide oEmbed links. Go\n[sign up](https://app.embed.ly/pricing/free) with them and configure\nyour API key like:\n\n```javascript\noembed.EMBEDLY_KEY = \"...\";\n```\n\nTODO\n----\n\n* Document size limits?\n* bin/oembed_httpd: Multiple URLs like embed.ly\n* bin/oembed_httpd: Pass through for ETags and Last-Modified\n",
  "repository": {
    "type": "git",
    "url": "git://github.com/astro/node-oembed.git"
  },
  "version": "0.1.0"
}
